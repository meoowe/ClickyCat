name: Export Desktop

on:
  push:
    branches: [ master ]

env:
  GODOT_VERSION: 4.3
  EXPORT_NAME: ClickyCat
  TAG: v2.0.1

jobs:
  export-windows:
    name: Windows Export üóî
    runs-on: ubuntu-latest
    container:
      image: docker://barichello/godot-ci:4.3
    steps:
      - name: Setup WINE and rcedit üç∑
        run: |
          chown root:root -R ~
          godot --headless --quit
          echo 'export/windows/wine = "/usr/bin/wine64-stable"' >> ~/.config/godot/editor_settings-4.3.tres
          echo 'export/windows/rcedit = "/opt/rcedit.exe"' >> ~/.config/godot/editor_settings-4.3.tres
      - name: Checkout üõéÔ∏è
        uses: actions/checkout@v4
        with:
          submodules: true
      - name: Setup üíª
        run: |
          mkdir -v -p build/${EXPORT_NAME}-Windows-64bit build/${EXPORT_NAME}-Windows-32bit ~/.local/share/godot/export_templates
          mv /root/.local/share/godot/export_templates/${GODOT_VERSION}.stable ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable
      - name: Import resources once üì¶
        continue-on-error: true
        run: godot --headless -v --import
      - name: Windows Build üîß
        run: |
          godot --headless -v --export-release "Windows Desktop 64-bit" ./build/${EXPORT_NAME}-Windows-64bit/${EXPORT_NAME}.exe
          godot --headless -v --export-release "Windows Desktop 32-bit" ./build/${EXPORT_NAME}-Windows-32bit/${EXPORT_NAME}.exe
      - name: Zip üóúÔ∏è
        working-directory: ./build
        run: |
          zip -r ${EXPORT_NAME}-Windows-64bit.zip ${EXPORT_NAME}-Windows-64bit
          zip -r ${EXPORT_NAME}-Windows-32bit.zip ${EXPORT_NAME}-Windows-32bit
      - name: Upload Release Asset üöÄ
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ./build/*
          tag: ${{env.TAG}}
          overwrite: true
          file_glob: true

  export-linux:
    name: Linux Export üêß
    runs-on: ubuntu-latest
    container:
      image: docker://barichello/godot-ci:4.3
    steps:
      - name: Checkout üõéÔ∏è
        uses: actions/checkout@v4
        with:
          submodules: true
      - name: Setup üíª
        run: |
          mkdir -v -p build/${EXPORT_NAME}-Linux-64bit build/${EXPORT_NAME}-Linux-32bit build/${EXPORT_NAME}-Linux-ARM64 build/${EXPORT_NAME}-Linux-ARM32 ~/.local/share/godot/export_templates
          mv /root/.local/share/godot/export_templates/${GODOT_VERSION}.stable ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable
      - name: Import resources once üì¶
        continue-on-error: true
        run: godot --headless -v --import
      - name: Linux Build üîß
        run: |
          godot --headless -v --export-release "Linux 64-bit" ./build/${EXPORT_NAME}-Linux-64bit/${EXPORT_NAME}.x86_64
          godot --headless -v --export-release "Linux 32-bit" ./build/${EXPORT_NAME}-Linux-32bit/${EXPORT_NAME}.x86_32
          godot --headless -v --export-release "Linux ARM64" ./build/${EXPORT_NAME}-Linux-ARM64/${EXPORT_NAME}.arm64
          godot --headless -v --export-release "Linux ARM32" ./build/${EXPORT_NAME}-Linux-ARM32/${EXPORT_NAME}.arm32
      - name: Give execute permission ‚òëÔ∏è
        run: |
          chmod +x ./build/${EXPORT_NAME}-Linux-64bit/${EXPORT_NAME}.x86_64
          chmod +x ./build/${EXPORT_NAME}-Linux-32bit/${EXPORT_NAME}.x86_32
          chmod +x ./build/${EXPORT_NAME}-Linux-ARM64/${EXPORT_NAME}.arm64
          chmod +x ./build/${EXPORT_NAME}-Linux-ARM32/${EXPORT_NAME}.arm32

      - name: Create tar.gz archive üóúÔ∏è
        run: |
          cd build
          tar zcvf ${EXPORT_NAME}-Linux-64bit.tar.gz ${EXPORT_NAME}-Linux-64bit
          tar zcvf ${EXPORT_NAME}-Linux-32bit.tar.gz ${EXPORT_NAME}-Linux-32bit
          tar zcvf ${EXPORT_NAME}-Linux-ARM64.tar.gz ${EXPORT_NAME}-Linux-ARM64
          tar zcvf ${EXPORT_NAME}-Linux-ARM32.tar.gz ${EXPORT_NAME}-Linux-ARM32
      - name: Upload Release Asset üöÄ
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ./build/${{env.EXPORT_NAME}}-Linux-*.tar.gz
          tag: ${{env.TAG}}
          overwrite: true
          file_glob: true

